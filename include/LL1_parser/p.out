
-----------------------------------------------------------------------------
Parsing Phase Output
-----------------------------------------------------------------------------
Stack : [ program $ ]
Input : [ INT MAIN PARAN_OPEN INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ type_specifier MAIN PARAN_OPEN parameter_list PARAN_CLOSE block $ ]
Input : [ INT MAIN PARAN_OPEN INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ INT MAIN PARAN_OPEN parameter_list PARAN_CLOSE block $ ]
Input : [ INT MAIN PARAN_OPEN INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ MAIN PARAN_OPEN parameter_list PARAN_CLOSE block $ ]
Input : [ MAIN PARAN_OPEN INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ PARAN_OPEN parameter_list PARAN_CLOSE block $ ]
Input : [ PARAN_OPEN INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ parameter_list PARAN_CLOSE block $ ]
Input : [ INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration parameter_list_1 PARAN_CLOSE block $ ]
Input : [ INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ type_specifier IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ INT IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ parameter_list_1 PARAN_CLOSE block $ ]
Input : [ COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ COMMA parameter_list PARAN_CLOSE block $ ]
Input : [ COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ parameter_list PARAN_CLOSE block $ ]
Input : [ FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration parameter_list_1 PARAN_CLOSE block $ ]
Input : [ FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ type_specifier IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ FLOAT IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ parameter_list_1 PARAN_CLOSE block $ ]
Input : [ COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ COMMA parameter_list PARAN_CLOSE block $ ]
Input : [ COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ parameter_list PARAN_CLOSE block $ ]
Input : [ STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration parameter_list_1 PARAN_CLOSE block $ ]
Input : [ STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ type_specifier IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ STRING IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ parameter_list_1 PARAN_CLOSE block $ ]
Input : [ PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ PARAN_CLOSE block $ ]
Input : [ PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ block $ ]
Input : [ BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ BRACE_OPEN statement BRACE_CLOSE $ ]
Input : [ BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ statement BRACE_CLOSE $ ]
Input : [ INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration SEMICOLON statement BRACE_CLOSE $ ]
Input : [ INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ type_specifier IDENTIFIER declaration_1 SEMICOLON statement BRACE_CLOSE $ ]
Input : [ INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ INT IDENTIFIER declaration_1 SEMICOLON statement BRACE_CLOSE $ ]
Input : [ INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER declaration_1 SEMICOLON statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration_1 SEMICOLON statement BRACE_CLOSE $ ]
Input : [ EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ EQUALS assignment_r SEMICOLON statement BRACE_CLOSE $ ]
Input : [ EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ assignment_r SEMICOLON statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ constant SEMICOLON statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ INTEGER_CONST SEMICOLON statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ SEMICOLON statement BRACE_CLOSE $ ]
Input : [ SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ statement BRACE_CLOSE $ ]
Input : [ STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration SEMICOLON statement BRACE_CLOSE $ ]
Input : [ STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ type_specifier IDENTIFIER declaration_1 SEMICOLON statement BRACE_CLOSE $ ]
Input : [ STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ STRING IDENTIFIER declaration_1 SEMICOLON statement BRACE_CLOSE $ ]
Input : [ STRING IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER declaration_1 SEMICOLON statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration_1 SEMICOLON statement BRACE_CLOSE $ ]
Input : [ EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ EQUALS assignment_r SEMICOLON statement BRACE_CLOSE $ ]
Input : [ EQUALS LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ assignment_r SEMICOLON statement BRACE_CLOSE $ ]
Input : [ LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ constant SEMICOLON statement BRACE_CLOSE $ ]
Input : [ LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ LITERAL SEMICOLON statement BRACE_CLOSE $ ]
Input : [ LITERAL SEMICOLON BRACE_CLOSE $ ]

Stack : [ SEMICOLON statement BRACE_CLOSE $ ]
Input : [ SEMICOLON BRACE_CLOSE $ ]

Stack : [ statement BRACE_CLOSE $ ]
Input : [ BRACE_CLOSE $ ]

Stack : [ BRACE_CLOSE $ ]
Input : [ BRACE_CLOSE $ ]

Stack : [ $ ]
Input : [ $ ]

Stack : [ ]
Input : [ ]

