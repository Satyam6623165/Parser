
-----------------------------------------------------------------------------
Parsing Phase Output
-----------------------------------------------------------------------------
Stack : [ program $ ]
Input : [ INT MAIN PARAN_OPEN INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ type_specifier MAIN PARAN_OPEN parameter_list PARAN_CLOSE block $ ]
Input : [ INT MAIN PARAN_OPEN INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ INT MAIN PARAN_OPEN parameter_list PARAN_CLOSE block $ ]
Input : [ INT MAIN PARAN_OPEN INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ MAIN PARAN_OPEN parameter_list PARAN_CLOSE block $ ]
Input : [ MAIN PARAN_OPEN INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ PARAN_OPEN parameter_list PARAN_CLOSE block $ ]
Input : [ PARAN_OPEN INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ parameter_list PARAN_CLOSE block $ ]
Input : [ INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration parameter_list_1 PARAN_CLOSE block $ ]
Input : [ INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ type_specifier IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ INT IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ INT IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ IDENTIFIER COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ parameter_list_1 PARAN_CLOSE block $ ]
Input : [ COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ COMMA parameter_list PARAN_CLOSE block $ ]
Input : [ COMMA FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ parameter_list PARAN_CLOSE block $ ]
Input : [ FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration parameter_list_1 PARAN_CLOSE block $ ]
Input : [ FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ type_specifier IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ FLOAT IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ FLOAT IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ IDENTIFIER COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ parameter_list_1 PARAN_CLOSE block $ ]
Input : [ COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ COMMA parameter_list PARAN_CLOSE block $ ]
Input : [ COMMA STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ parameter_list PARAN_CLOSE block $ ]
Input : [ STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration parameter_list_1 PARAN_CLOSE block $ ]
Input : [ STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ type_specifier IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ STRING IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ STRING IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ IDENTIFIER PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration_1 parameter_list_1 PARAN_CLOSE block $ ]
Input : [ PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ parameter_list_1 PARAN_CLOSE block $ ]
Input : [ PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ PARAN_CLOSE block $ ]
Input : [ PARAN_CLOSE BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ block $ ]
Input : [ BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ BRACE_OPEN statement BRACE_CLOSE $ ]
Input : [ BRACE_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ statement BRACE_CLOSE $ ]
Input : [ INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration SEMICOLON statement BRACE_CLOSE $ ]
Input : [ INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ type_specifier IDENTIFIER declaration_1 SEMICOLON statement BRACE_CLOSE $ ]
Input : [ INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ INT IDENTIFIER declaration_1 SEMICOLON statement BRACE_CLOSE $ ]
Input : [ INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER declaration_1 SEMICOLON statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration_1 SEMICOLON statement BRACE_CLOSE $ ]
Input : [ EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ EQUALS assignment_r SEMICOLON statement BRACE_CLOSE $ ]
Input : [ EQUALS INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ assignment_r SEMICOLON statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ constant SEMICOLON statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ INTEGER_CONST SEMICOLON statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ SEMICOLON statement BRACE_CLOSE $ ]
Input : [ SEMICOLON STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ statement BRACE_CLOSE $ ]
Input : [ STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration SEMICOLON statement BRACE_CLOSE $ ]
Input : [ STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ type_specifier IDENTIFIER declaration_1 SEMICOLON statement BRACE_CLOSE $ ]
Input : [ STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ STRING IDENTIFIER declaration_1 SEMICOLON statement BRACE_CLOSE $ ]
Input : [ STRING IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER declaration_1 SEMICOLON statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration_1 SEMICOLON statement BRACE_CLOSE $ ]
Input : [ EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ EQUALS assignment_r SEMICOLON statement BRACE_CLOSE $ ]
Input : [ EQUALS LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ assignment_r SEMICOLON statement BRACE_CLOSE $ ]
Input : [ LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ constant SEMICOLON statement BRACE_CLOSE $ ]
Input : [ LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ LITERAL SEMICOLON statement BRACE_CLOSE $ ]
Input : [ LITERAL SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ SEMICOLON statement BRACE_CLOSE $ ]
Input : [ SEMICOLON FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ statement BRACE_CLOSE $ ]
Input : [ FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ loop_construct block statement BRACE_CLOSE $ ]
Input : [ FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ FOR PARAN_OPEN declaration SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ PARAN_OPEN declaration SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ type_specifier IDENTIFIER declaration_1 SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ INT IDENTIFIER declaration_1 SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER declaration_1 SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration_1 SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ EQUALS assignment_r SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ assignment_r SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ constant SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ INTEGER_CONST SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ term conditionals_1 SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER conditionals_1 SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ conditionals_1 SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ LT term SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ term SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ constant SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ INTEGER_CONST SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ assignment PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER EQUALS assignment_r PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ EQUALS assignment_r PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ assignment_r PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ arith_expr PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ ADD term term PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ term term PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER term PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ term PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ constant PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ INTEGER_CONST PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ PARAN_CLOSE block statement BRACE_CLOSE $ ]
Input : [ PARAN_CLOSE BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ block statement BRACE_CLOSE $ ]
Input : [ BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ BRACE_OPEN statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ BRACE_OPEN FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ loop_construct block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ FOR PARAN_OPEN declaration SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ FOR PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ PARAN_OPEN declaration SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ PARAN_OPEN INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ type_specifier IDENTIFIER declaration_1 SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ INT IDENTIFIER declaration_1 SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ INT IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER declaration_1 SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ declaration_1 SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ EQUALS assignment_r SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ EQUALS INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ assignment_r SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ constant SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ INTEGER_CONST SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ SEMICOLON conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ SEMICOLON IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ conditionals SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ term conditionals_1 SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER conditionals_1 SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ conditionals_1 SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ LT term SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ LT INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ term SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ constant SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ INTEGER_CONST SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ SEMICOLON assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ SEMICOLON IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ assignment PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER EQUALS assignment_r PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ EQUALS assignment_r PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ EQUALS ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ assignment_r PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ arith_expr PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ ADD term term PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ ADD IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ term term PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER term PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ term PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ constant PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ INTEGER_CONST PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ PARAN_CLOSE block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ PARAN_CLOSE BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ block statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ BRACE_OPEN statement BRACE_CLOSE statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ BRACE_OPEN IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ statement BRACE_CLOSE statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ assignment SEMICOLON statement BRACE_CLOSE statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER EQUALS assignment_r SEMICOLON statement BRACE_CLOSE statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ EQUALS assignment_r SEMICOLON statement BRACE_CLOSE statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ EQUALS DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ assignment_r SEMICOLON statement BRACE_CLOSE statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ arith_expr SEMICOLON statement BRACE_CLOSE statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ DIV term term SEMICOLON statement BRACE_CLOSE statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ DIV IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ term term SEMICOLON statement BRACE_CLOSE statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ IDENTIFIER term SEMICOLON statement BRACE_CLOSE statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ IDENTIFIER INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ term SEMICOLON statement BRACE_CLOSE statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ constant SEMICOLON statement BRACE_CLOSE statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ INTEGER_CONST SEMICOLON statement BRACE_CLOSE statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ SEMICOLON statement BRACE_CLOSE statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ SEMICOLON BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ statement BRACE_CLOSE statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ BRACE_CLOSE statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ BRACE_CLOSE BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ statement BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ BRACE_CLOSE statement BRACE_CLOSE $ ]
Input : [ BRACE_CLOSE RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ statement BRACE_CLOSE $ ]
Input : [ RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ return_statement SEMICOLON BRACE_CLOSE $ ]
Input : [ RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ RETURN return_statement_r SEMICOLON BRACE_CLOSE $ ]
Input : [ RETURN INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ return_statement_r SEMICOLON BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ term SEMICOLON BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ constant SEMICOLON BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]
Input : [ INTEGER_CONST SEMICOLON BRACE_CLOSE $ ]

Stack : [ SEMICOLON BRACE_CLOSE $ ]
Input : [ SEMICOLON BRACE_CLOSE $ ]

Stack : [ BRACE_CLOSE $ ]
Input : [ BRACE_CLOSE $ ]

Stack : [ $ ]
Input : [ $ ]

Stack : [ ]
Input : [ ]

